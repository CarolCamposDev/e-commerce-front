{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Carol\\\\Vscode\\\\e-commerce\\\\src\\\\views\\\\cadastro-carrinho.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport Stack from '@mui/material/Stack';\nimport Card from '../components/card';\nimport FormGroup from '../components/form-group';\nimport { mensagemSucesso, mensagemErro } from '../components/toastr';\nimport '../custom.css';\nimport axios from 'axios';\nimport { BASE_URL } from '../config/axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CadastrarCarrinho() {\n  _s();\n  const {\n    idParam\n  } = useParams();\n  const navigate = useNavigate();\n  const baseURL = `${BASE_URL}/carrinhos`;\n  const [id, setId] = useState('');\n  const [clienteId, setClienteId] = useState('');\n  const [produtos, setProdutos] = useState([]);\n  const [precoTotal, setPrecoTotal] = useState(0);\n  const [listaProdutos, setListaProdutos] = useState([]);\n  const [status, setStatus] = useState('');\n  const [dados, setDados] = useState(null);\n  const [listaClientes, setListaClientes] = useState([]);\n  useEffect(() => {\n    async function buscarDados() {\n      if (idParam != null) {\n        try {\n          const response = await axios.get(`${baseURL}/${idParam}`);\n          setDados(response.data);\n        } catch (error) {\n          if (error.response && error.response.status === 404) {\n            mensagemErro('Carrinho não encontrado.');\n          } else {\n            mensagemErro('Ocorreu um erro ao buscar os dados do carrinho.');\n          }\n        }\n      }\n    }\n    buscarDados();\n  }, [idParam]);\n  useEffect(() => {\n    if (dados) {\n      setId(dados.id);\n      setClienteId(dados.cliente.id);\n      setProdutos(dados.produtos);\n      setPrecoTotal(dados.precoTotal);\n      setStatus(dados.status);\n    }\n  }, [dados]);\n  useEffect(() => {\n    async function carregarProdutos() {\n      try {\n        const response = await axios.get(`${BASE_URL}/produtos`);\n        setListaProdutos(response.data);\n      } catch (error) {\n        mensagemErro('Ocorreu um erro ao carregar a lista de produtos.');\n      }\n    }\n    carregarProdutos();\n  }, []);\n  useEffect(() => {\n    async function carregarClientes() {\n      try {\n        const response = await axios.get(`${BASE_URL}/clientes`);\n        setListaClientes(response.data);\n      } catch (error) {\n        mensagemErro('Ocorreu um erro ao carregar a lista de clientes.');\n      }\n    }\n    carregarClientes();\n  }, []);\n  function inicializar() {\n    setId('');\n    setClienteId('');\n    setProdutos([]);\n    setPrecoTotal(0);\n    setStatus('');\n  }\n  async function salvar() {\n    try {\n      // Verificar se o campo Cliente Id está preenchido\n      if (!clienteId) {\n        mensagemErro('Por favor, preencha o campo Cliente Id.');\n        return;\n      }\n\n      // Verificar se pelo menos um produto foi selecionado\n      if (produtos.length === 0) {\n        mensagemErro('Por favor, selecione pelo menos um produto.');\n        return;\n      }\n\n      // Verificar se o cliente existe\n      const clienteResponse = await axios.get(`${BASE_URL}/clientes/${clienteId}`);\n      const cliente = clienteResponse.data;\n      if (!cliente) {\n        mensagemErro('Cliente não encontrado. Verifique o ID do cliente.');\n        return;\n      }\n\n      // Verificar se o cliente já possui um carrinho\n      const carrinhosClienteResponse = await axios.get(`${BASE_URL}/carrinhos?clienteId=${clienteId}`);\n      const carrinhosCliente = carrinhosClienteResponse.data;\n      if (carrinhosCliente.length > 0) {\n        mensagemErro('O cliente já possui um carrinho cadastrado.');\n        return;\n      }\n      const data = {\n        id,\n        cliente: {\n          id: clienteId\n        },\n        produtos,\n        precoTotal,\n        status\n      };\n      if (idParam) {\n        await axios.put(`${baseURL}/${idParam}`, data, {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        mensagemSucesso(`Carrinho alterado com sucesso!`);\n      } else {\n        await axios.post(baseURL, data, {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        mensagemSucesso(`Carrinho cadastrado com sucesso!`);\n      }\n      navigate(`/listagem-carrinhos`);\n    } catch (error) {\n      if (error.response) {\n        if (error.response.status === 404) {\n          mensagemErro('Cliente não encontrado. Verifique o ID do cliente.');\n        } else {\n          mensagemErro('Ocorreu um erro ao salvar o carrinho.');\n        }\n      } else {\n        mensagemErro('Ocorreu um erro de rede.');\n      }\n    }\n  }\n  function adicionarProduto(produtoId) {\n    const produto = listaProdutos.find(p => p.id === produtoId);\n    if (produto) {\n      const updatedProdutos = [...produtos, produto];\n      const updatedPrecoTotal = updatedProdutos.reduce((total, produto) => total + produto.preco, 0);\n      setProdutos(updatedProdutos);\n      setPrecoTotal(updatedPrecoTotal);\n    }\n  }\n  function removerProduto(produtoId) {\n    const updatedProdutos = produtos.filter(p => p.id !== produtoId);\n    const updatedPrecoTotal = updatedProdutos.reduce((total, produto) => total + produto.preco, 0);\n    setProdutos(updatedProdutos);\n    setPrecoTotal(updatedPrecoTotal);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      title: \"Cadastro de Carrinho\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bs-component\",\n            children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n              label: \"Cliente Id:\",\n              htmlFor: \"inputClienteId\",\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"inputClienteId\",\n                className: \"form-control\",\n                value: clienteId,\n                onChange: e => setClienteId(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Selecione um cliente\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 19\n                }, this), listaClientes.map(cliente => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: cliente.id,\n                  children: cliente.nome\n                }, cliente.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"selectProduto\",\n                children: \"Produtos:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"selectProduto\",\n                className: \"form-control\",\n                onChange: e => adicionarProduto(Number(e.target.value)),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Selecione um produto\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 19\n                }, this), listaProdutos.map(produto => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: produto.id,\n                  children: produto.nome\n                }, produto.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: produtos.map(produto => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: produto.nome\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => removerProduto(produto.id),\n                  className: \"btn btn-sm btn-danger\",\n                  children: \"Remover\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 21\n                }, this)]\n              }, produto.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              label: \"Pre\\xE7o Total:\",\n              htmlFor: \"inputPrecoTotal\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                id: \"inputPrecoTotal\",\n                value: precoTotal,\n                className: \"form-control\",\n                name: \"precoTotal\",\n                readOnly: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              label: \"Status:\",\n              htmlFor: \"inputStatus\",\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"inputStatus\",\n                className: \"form-control\",\n                value: status,\n                onChange: e => setStatus(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Selecione o status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Em andamento\",\n                  children: \"Em andamento\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Finalizado\",\n                  children: \"Finalizado\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Stack, {\n              spacing: 1,\n              padding: 1,\n              direction: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: salvar,\n                type: \"button\",\n                className: \"btn btn-success\",\n                children: \"Salvar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: inicializar,\n                type: \"button\",\n                className: \"btn btn-danger\",\n                children: \"Cancelar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n}\n_s(CadastrarCarrinho, \"JfwFco9yqGqScVmxEGil0WKcNwI=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = CadastrarCarrinho;\nexport default CadastrarCarrinho;\nvar _c;\n$RefreshReg$(_c, \"CadastrarCarrinho\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","Stack","Card","FormGroup","mensagemSucesso","mensagemErro","axios","BASE_URL","jsxDEV","_jsxDEV","CadastrarCarrinho","_s","idParam","navigate","baseURL","id","setId","clienteId","setClienteId","produtos","setProdutos","precoTotal","setPrecoTotal","listaProdutos","setListaProdutos","status","setStatus","dados","setDados","listaClientes","setListaClientes","buscarDados","response","get","data","error","cliente","carregarProdutos","carregarClientes","inicializar","salvar","length","clienteResponse","carrinhosClienteResponse","carrinhosCliente","put","headers","post","adicionarProduto","produtoId","produto","find","p","updatedProdutos","updatedPrecoTotal","reduce","total","preco","removerProduto","filter","className","children","title","label","htmlFor","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","map","nome","Number","onClick","type","name","readOnly","spacing","padding","direction","_c","$RefreshReg$"],"sources":["C:/Users/Carol/Vscode/e-commerce/src/views/cadastro-carrinho.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport Stack from '@mui/material/Stack';\r\nimport Card from '../components/card';\r\nimport FormGroup from '../components/form-group';\r\nimport { mensagemSucesso, mensagemErro } from '../components/toastr';\r\nimport '../custom.css';\r\nimport axios from 'axios';\r\nimport { BASE_URL } from '../config/axios';\r\n\r\nfunction CadastrarCarrinho() {\r\n  const { idParam } = useParams();\r\n  const navigate = useNavigate();\r\n  const baseURL = `${BASE_URL}/carrinhos`;\r\n\r\n  const [id, setId] = useState('');\r\n  const [clienteId, setClienteId] = useState('');\r\n  const [produtos, setProdutos] = useState([]);\r\n  const [precoTotal, setPrecoTotal] = useState(0);\r\n  const [listaProdutos, setListaProdutos] = useState([]);\r\n  const [status, setStatus] = useState('');\r\n  const [dados, setDados] = useState(null);\r\n  const [listaClientes, setListaClientes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function buscarDados() {\r\n      if (idParam != null) {\r\n        try {\r\n          const response = await axios.get(`${baseURL}/${idParam}`);\r\n          setDados(response.data);\r\n        } catch (error) {\r\n          if (error.response && error.response.status === 404) {\r\n            mensagemErro('Carrinho não encontrado.');\r\n          } else {\r\n            mensagemErro('Ocorreu um erro ao buscar os dados do carrinho.');\r\n          }\r\n        }\r\n      }\r\n    }\r\n    buscarDados();\r\n  }, [idParam]);\r\n\r\n  useEffect(() => {\r\n    if (dados) {\r\n      setId(dados.id);\r\n      setClienteId(dados.cliente.id);\r\n      setProdutos(dados.produtos);\r\n      setPrecoTotal(dados.precoTotal);\r\n      setStatus(dados.status);\r\n    }\r\n  }, [dados]);\r\n\r\n  useEffect(() => {\r\n    async function carregarProdutos() {\r\n      try {\r\n        const response = await axios.get(`${BASE_URL}/produtos`);\r\n        setListaProdutos(response.data);\r\n      } catch (error) {\r\n        mensagemErro('Ocorreu um erro ao carregar a lista de produtos.');\r\n      }\r\n    }\r\n    carregarProdutos();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    async function carregarClientes() {\r\n      try {\r\n        const response = await axios.get(`${BASE_URL}/clientes`);\r\n        setListaClientes(response.data);\r\n      } catch (error) {\r\n        mensagemErro('Ocorreu um erro ao carregar a lista de clientes.');\r\n      }\r\n    }\r\n    carregarClientes();\r\n  }, []);\r\n\r\n  function inicializar() {\r\n    setId('');\r\n    setClienteId('');\r\n    setProdutos([]);\r\n    setPrecoTotal(0);\r\n    setStatus('');\r\n  }\r\n\r\n  async function salvar() {\r\n  try {\r\n    // Verificar se o campo Cliente Id está preenchido\r\n    if (!clienteId) {\r\n      mensagemErro('Por favor, preencha o campo Cliente Id.');\r\n      return;\r\n    }\r\n\r\n    // Verificar se pelo menos um produto foi selecionado\r\n    if (produtos.length === 0) {\r\n      mensagemErro('Por favor, selecione pelo menos um produto.');\r\n      return;\r\n    }\r\n\r\n    // Verificar se o cliente existe\r\n    const clienteResponse = await axios.get(`${BASE_URL}/clientes/${clienteId}`);\r\n    const cliente = clienteResponse.data;\r\n\r\n    if (!cliente) {\r\n      mensagemErro('Cliente não encontrado. Verifique o ID do cliente.');\r\n      return;\r\n    }\r\n\r\n    // Verificar se o cliente já possui um carrinho\r\n    const carrinhosClienteResponse = await axios.get(`${BASE_URL}/carrinhos?clienteId=${clienteId}`);\r\n    const carrinhosCliente = carrinhosClienteResponse.data;\r\n\r\n    if (carrinhosCliente.length > 0) {\r\n      mensagemErro('O cliente já possui um carrinho cadastrado.');\r\n      return;\r\n    }\r\n\r\n    const data = { id, cliente: { id: clienteId }, produtos, precoTotal, status };\r\n\r\n    if (idParam) {\r\n      await axios.put(`${baseURL}/${idParam}`, data, {\r\n        headers: { 'Content-Type': 'application/json' },\r\n      });\r\n      mensagemSucesso(`Carrinho alterado com sucesso!`);\r\n    } else {\r\n      await axios.post(baseURL, data, {\r\n        headers: { 'Content-Type': 'application/json' },\r\n      });\r\n      mensagemSucesso(`Carrinho cadastrado com sucesso!`);\r\n    }\r\n\r\n    navigate(`/listagem-carrinhos`);\r\n  } catch (error) {\r\n    if (error.response) {\r\n      if (error.response.status === 404) {\r\n        mensagemErro('Cliente não encontrado. Verifique o ID do cliente.');\r\n      } else {\r\n        mensagemErro('Ocorreu um erro ao salvar o carrinho.');\r\n      }\r\n    } else {\r\n      mensagemErro('Ocorreu um erro de rede.');\r\n    }\r\n  }\r\n}\r\n\r\n  function adicionarProduto(produtoId) {\r\n    const produto = listaProdutos.find((p) => p.id === produtoId);\r\n    if (produto) {\r\n      const updatedProdutos = [...produtos, produto];\r\n      const updatedPrecoTotal = updatedProdutos.reduce(\r\n        (total, produto) => total + produto.preco,\r\n        0\r\n      );\r\n      setProdutos(updatedProdutos);\r\n      setPrecoTotal(updatedPrecoTotal);\r\n    }\r\n  }\r\n\r\n  function removerProduto(produtoId) {\r\n    const updatedProdutos = produtos.filter((p) => p.id !== produtoId);\r\n    const updatedPrecoTotal = updatedProdutos.reduce(\r\n      (total, produto) => total + produto.preco,\r\n      0\r\n    );\r\n    setProdutos(updatedProdutos);\r\n    setPrecoTotal(updatedPrecoTotal);\r\n  }\r\n\r\n  return (\r\n    <div className='container'>\r\n      <Card title='Cadastro de Carrinho'>\r\n        <div className='row'>\r\n          <div className='col-lg-12'>\r\n            <div className='bs-component'>\r\n              <FormGroup label='Cliente Id:' htmlFor='inputClienteId'>\r\n                <select\r\n                  id='inputClienteId'\r\n                  className='form-control'\r\n                  value={clienteId}\r\n                  onChange={(e) => setClienteId(e.target.value)}\r\n                >\r\n                  <option value=''>Selecione um cliente</option>\r\n                  {listaClientes.map((cliente) => (\r\n                    <option key={cliente.id} value={cliente.id}>\r\n                      {cliente.nome}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </FormGroup>\r\n\r\n              <div className='form-group'>\r\n                <label htmlFor='selectProduto'>Produtos:</label>\r\n                <select\r\n                  id='selectProduto'\r\n                  className='form-control'\r\n                  onChange={(e) => adicionarProduto(Number(e.target.value))}\r\n                >\r\n                  <option value=''>Selecione um produto</option>\r\n                  {listaProdutos.map((produto) => (\r\n                    <option key={produto.id} value={produto.id}>\r\n                      {produto.nome}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n\r\n              <div>\r\n                {produtos.map((produto) => (\r\n                  <div key={produto.id}>\r\n                    <span>{produto.nome}</span>\r\n                    <button\r\n                      onClick={() => removerProduto(produto.id)}\r\n                      className='btn btn-sm btn-danger'\r\n                    >\r\n                      Remover\r\n                    </button>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n\r\n              <FormGroup label='Preço Total:' htmlFor='inputPrecoTotal'>\r\n                <input\r\n                  type='number'\r\n                  id='inputPrecoTotal'\r\n                  value={precoTotal}\r\n                  className='form-control'\r\n                  name='precoTotal'\r\n                  readOnly\r\n                />\r\n              </FormGroup>\r\n\r\n              <FormGroup label='Status:' htmlFor='inputStatus'>\r\n                <select\r\n                  id='inputStatus'\r\n                  className='form-control'\r\n                  value={status}\r\n                  onChange={(e) => setStatus(e.target.value)}\r\n                >\r\n                  <option value=''>Selecione o status</option>\r\n                  <option value='Em andamento'>Em andamento</option>\r\n                  <option value='Finalizado'>Finalizado</option>\r\n                </select>\r\n              </FormGroup>\r\n\r\n              <Stack spacing={1} padding={1} direction='row'>\r\n                <button\r\n                  onClick={salvar}\r\n                  type='button'\r\n                  className='btn btn-success'\r\n                >\r\n                  Salvar\r\n                </button>\r\n                <button\r\n                  onClick={inicializar}\r\n                  type='button'\r\n                  className='btn btn-danger'\r\n                >\r\n                  Cancelar\r\n                </button>\r\n              </Stack>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CadastrarCarrinho;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}